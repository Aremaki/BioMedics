[tool.poetry]
name = "biomedics"
version = "0.1.0"
description = "Extracting and normalizing laboratory test mentions and drug mentions from raw clinical note"
authors = ["Aremaki <ad.remaki@gmail.com>", "percevalw <perceval.wajsburt-ext@aphp.fr>", "Eliseliuaphp <elise.liu@aphp.fr>", "Jungack <jacques.ung@ensta-paris.fr>", "PierrePages <pierre.pages@etu.u-paris.fr>"]
license = "BSD 3-Clause License"
readme = "README.md"

[tool.poetry.dependencies]
# /!\ Do not hesitate to adjust python's version to fit your training and deployment environments
python = ">3.7.6,<3.8.0"
edsnlp = { version = "0.13.0", extras = ["ml"] }
sentencepiece = "^0.1.96"
altair = "^5.0"
fsspec = "2022.7.1"
unidecode = "^1.3.8"
thinc = "8.2.3"
pathspec = "0.9.0"
tomlkit = "0.12.5"
duckdb = "^1.0.0"
spacy = "3.7.5"
matplotlib = "<=3.5.3"
matplotlib-venn = "^1.1.1"
loguru = "^0.6.0"
typer = "^0.6.1"
pandas = "^1.1.0"
pyarrow = "7.0.0"
coverage = "^6.5.0"
toml = "^0.10.2"
wheel = "^0.40.0"
accelerate = "0.20.3"
rich-logger = "^0.3.0"
torch = "<2.1"
pyspark = "^2.4.3"
scipy = "^1.7.3"

[tool.poetry.group.dev.dependencies]
interrogate = "1.5.0"
ruff = "^0.6.7"
pre-commit = "^2.18.1"
mypy = "^0.950"
jupyter-black = "^0.4.0"

[tool.edsnlp]
# Suggestion: choose a name that mixes both the architecture (eds-medic) and the
# dataset on which the model was trained (aphp)
# This field will be read by script/package.py
model_name = "eds-medic-cse200093"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 10
exclude = ["docs", "build", "tests"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.mypy]
plugins = "pydantic.mypy"

[tool.ruff]
fix = true
extend-exclude = [
    ".git",
    "__pycache__",
    "__init__.py",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "build",
]
line-length = 88
lint.select = [
    "E",
    "F",
    "W",
    "I001"
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["biomedics"]
order-by-type = true


[build-system]
requires = ["poetry-core>=1.0.0", "pypandoc<1.8.0"]
build-backend = "poetry.core.masonry.api"
